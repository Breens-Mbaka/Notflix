plugins {
    id 'com.android.library'
    id 'kotlin-android'
    //id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    api project(':domain')

    //implementation dataDependencies.kotlin

    implementation testDependencies.jUnit
    implementation testDependencies.truth
    testImplementation testDependencies.coroutinesTest
    testImplementation testDependencies.robolectric
    implementation testDependencies.mockWebServer

    //androidTestImplementation testDependencies.jUnit
    androidTestImplementation testDependencies.androidJUnit
    //androidTestImplementation testDependencies.truth
    androidTestImplementation testDependencies.androidEspresso
    androidTestImplementation testDependencies.androidCoreTesting
    androidTestImplementation testDependencies.androidArchCoreTesting
    androidTestImplementation testDependencies.androidTestRules
    androidTestImplementation testDependencies.androidTestRunner

    //Retrofit
    /*api dataDependencies.retrofit

    //GSON Converter
    api dataDependencies.gsonConvertor

    //Logging Interceptor
    api dataDependencies.loggingIntercepter

    api dataDependencies.coroutinesCore

    //Dependency Injection-
    implementation dataDependencies.hiltAndroid
    kapt dataDependencies.hiltAndroidCompiler

    //Room
    api dataDependencies.roomRuntime
    kapt dataDependencies.roomCompiler
    api dataDependencies.roomKtx

    //DataStore
    implementation dataDependencies.datastore

    //Timber dep- For lightweight simplified logging
    implementation appDependencies.timber

    //Paging 3
    implementation dataDependencies.paging*/
}