// Generated by view binder compiler. Do not edit!
package com.company.details.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.motion.widget.MotionLayout;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.bosphere.fadingedgelayout.FadingEdgeLayout;
import com.company.details.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMovieDetailsBinding implements ViewBinding {
  @NonNull
  private final MotionLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final CardView cardViewTrailer;

  @NonNull
  public final ChipGroup chipGroupGenres;

  @NonNull
  public final ConstraintLayout constraintLayoutMovieMetadata;

  @NonNull
  public final ConstraintLayout constraintPopularityRating;

  @NonNull
  public final FloatingActionButton fabPlayTrailer;

  @NonNull
  public final FadingEdgeLayout felImagePoster;

  @NonNull
  public final ImageView imageViewBack;

  @NonNull
  public final ImageView imageViewFavorite;

  @NonNull
  public final ImageView imageViewMoviePoster;

  @NonNull
  public final ImageView imageViewRatingStar;

  @NonNull
  public final ImageView imageViewVideoPlaceholder;

  @NonNull
  public final NestedScrollView nestedScrollviewMovieDetails;

  @NonNull
  public final RecyclerView recyclerviewCast;

  @NonNull
  public final RecyclerView recyclerviewSimilarMovies;

  @NonNull
  public final TextView textViewCastTitle;

  @NonNull
  public final TextView textViewMovieDuration;

  @NonNull
  public final TextView textViewMovieName;

  @NonNull
  public final TextView textViewMoviePopularity;

  @NonNull
  public final TextView textViewMoviePopularityTitle;

  @NonNull
  public final TextView textViewMovieRating;

  @NonNull
  public final TextView textViewMovieRelease;

  @NonNull
  public final TextView textViewOverview;

  @NonNull
  public final TextView textViewOverviewTitle;

  @NonNull
  public final TextView textViewSimilarMoviesTitle;

  @NonNull
  public final TextView textViewTrailerTitle;

  @NonNull
  public final View view;

  @NonNull
  public final View youtubePlayerView;

  private FragmentMovieDetailsBinding(@NonNull MotionLayout rootView, @NonNull AppBarLayout appBar,
      @NonNull CardView cardViewTrailer, @NonNull ChipGroup chipGroupGenres,
      @NonNull ConstraintLayout constraintLayoutMovieMetadata,
      @NonNull ConstraintLayout constraintPopularityRating,
      @NonNull FloatingActionButton fabPlayTrailer, @NonNull FadingEdgeLayout felImagePoster,
      @NonNull ImageView imageViewBack, @NonNull ImageView imageViewFavorite,
      @NonNull ImageView imageViewMoviePoster, @NonNull ImageView imageViewRatingStar,
      @NonNull ImageView imageViewVideoPlaceholder,
      @NonNull NestedScrollView nestedScrollviewMovieDetails,
      @NonNull RecyclerView recyclerviewCast, @NonNull RecyclerView recyclerviewSimilarMovies,
      @NonNull TextView textViewCastTitle, @NonNull TextView textViewMovieDuration,
      @NonNull TextView textViewMovieName, @NonNull TextView textViewMoviePopularity,
      @NonNull TextView textViewMoviePopularityTitle, @NonNull TextView textViewMovieRating,
      @NonNull TextView textViewMovieRelease, @NonNull TextView textViewOverview,
      @NonNull TextView textViewOverviewTitle, @NonNull TextView textViewSimilarMoviesTitle,
      @NonNull TextView textViewTrailerTitle, @NonNull View view, @NonNull View youtubePlayerView) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.cardViewTrailer = cardViewTrailer;
    this.chipGroupGenres = chipGroupGenres;
    this.constraintLayoutMovieMetadata = constraintLayoutMovieMetadata;
    this.constraintPopularityRating = constraintPopularityRating;
    this.fabPlayTrailer = fabPlayTrailer;
    this.felImagePoster = felImagePoster;
    this.imageViewBack = imageViewBack;
    this.imageViewFavorite = imageViewFavorite;
    this.imageViewMoviePoster = imageViewMoviePoster;
    this.imageViewRatingStar = imageViewRatingStar;
    this.imageViewVideoPlaceholder = imageViewVideoPlaceholder;
    this.nestedScrollviewMovieDetails = nestedScrollviewMovieDetails;
    this.recyclerviewCast = recyclerviewCast;
    this.recyclerviewSimilarMovies = recyclerviewSimilarMovies;
    this.textViewCastTitle = textViewCastTitle;
    this.textViewMovieDuration = textViewMovieDuration;
    this.textViewMovieName = textViewMovieName;
    this.textViewMoviePopularity = textViewMoviePopularity;
    this.textViewMoviePopularityTitle = textViewMoviePopularityTitle;
    this.textViewMovieRating = textViewMovieRating;
    this.textViewMovieRelease = textViewMovieRelease;
    this.textViewOverview = textViewOverview;
    this.textViewOverviewTitle = textViewOverviewTitle;
    this.textViewSimilarMoviesTitle = textViewSimilarMoviesTitle;
    this.textViewTrailerTitle = textViewTrailerTitle;
    this.view = view;
    this.youtubePlayerView = youtubePlayerView;
  }

  @Override
  @NonNull
  public MotionLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMovieDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMovieDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_movie_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMovieDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBar;
      AppBarLayout appBar = rootView.findViewById(id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.cardView_trailer;
      CardView cardViewTrailer = rootView.findViewById(id);
      if (cardViewTrailer == null) {
        break missingId;
      }

      id = R.id.chipGroup_genres;
      ChipGroup chipGroupGenres = rootView.findViewById(id);
      if (chipGroupGenres == null) {
        break missingId;
      }

      id = R.id.constraint_layout_movie_metadata;
      ConstraintLayout constraintLayoutMovieMetadata = rootView.findViewById(id);
      if (constraintLayoutMovieMetadata == null) {
        break missingId;
      }

      id = R.id.constraint_popularity_rating;
      ConstraintLayout constraintPopularityRating = rootView.findViewById(id);
      if (constraintPopularityRating == null) {
        break missingId;
      }

      id = R.id.fab_play_trailer;
      FloatingActionButton fabPlayTrailer = rootView.findViewById(id);
      if (fabPlayTrailer == null) {
        break missingId;
      }

      id = R.id.fel_image_poster;
      FadingEdgeLayout felImagePoster = rootView.findViewById(id);
      if (felImagePoster == null) {
        break missingId;
      }

      id = R.id.imageView_back;
      ImageView imageViewBack = rootView.findViewById(id);
      if (imageViewBack == null) {
        break missingId;
      }

      id = R.id.imageView_favorite;
      ImageView imageViewFavorite = rootView.findViewById(id);
      if (imageViewFavorite == null) {
        break missingId;
      }

      id = R.id.imageView_movie_poster;
      ImageView imageViewMoviePoster = rootView.findViewById(id);
      if (imageViewMoviePoster == null) {
        break missingId;
      }

      id = R.id.imageView_rating_star;
      ImageView imageViewRatingStar = rootView.findViewById(id);
      if (imageViewRatingStar == null) {
        break missingId;
      }

      id = R.id.imageView_video_placeholder;
      ImageView imageViewVideoPlaceholder = rootView.findViewById(id);
      if (imageViewVideoPlaceholder == null) {
        break missingId;
      }

      id = R.id.nested_scrollview_movie_details;
      NestedScrollView nestedScrollviewMovieDetails = rootView.findViewById(id);
      if (nestedScrollviewMovieDetails == null) {
        break missingId;
      }

      id = R.id.recyclerview_cast;
      RecyclerView recyclerviewCast = rootView.findViewById(id);
      if (recyclerviewCast == null) {
        break missingId;
      }

      id = R.id.recyclerview_similarMovies;
      RecyclerView recyclerviewSimilarMovies = rootView.findViewById(id);
      if (recyclerviewSimilarMovies == null) {
        break missingId;
      }

      id = R.id.textView_cast_title;
      TextView textViewCastTitle = rootView.findViewById(id);
      if (textViewCastTitle == null) {
        break missingId;
      }

      id = R.id.textView_movie_duration;
      TextView textViewMovieDuration = rootView.findViewById(id);
      if (textViewMovieDuration == null) {
        break missingId;
      }

      id = R.id.textView_movie_name;
      TextView textViewMovieName = rootView.findViewById(id);
      if (textViewMovieName == null) {
        break missingId;
      }

      id = R.id.textView_movie_popularity;
      TextView textViewMoviePopularity = rootView.findViewById(id);
      if (textViewMoviePopularity == null) {
        break missingId;
      }

      id = R.id.textView_movie_popularity_title;
      TextView textViewMoviePopularityTitle = rootView.findViewById(id);
      if (textViewMoviePopularityTitle == null) {
        break missingId;
      }

      id = R.id.textView_movie_rating;
      TextView textViewMovieRating = rootView.findViewById(id);
      if (textViewMovieRating == null) {
        break missingId;
      }

      id = R.id.textView_movie_release;
      TextView textViewMovieRelease = rootView.findViewById(id);
      if (textViewMovieRelease == null) {
        break missingId;
      }

      id = R.id.textView_overview;
      TextView textViewOverview = rootView.findViewById(id);
      if (textViewOverview == null) {
        break missingId;
      }

      id = R.id.textView_overview_title;
      TextView textViewOverviewTitle = rootView.findViewById(id);
      if (textViewOverviewTitle == null) {
        break missingId;
      }

      id = R.id.textView_similar_movies_title;
      TextView textViewSimilarMoviesTitle = rootView.findViewById(id);
      if (textViewSimilarMoviesTitle == null) {
        break missingId;
      }

      id = R.id.textView_trailer_title;
      TextView textViewTrailerTitle = rootView.findViewById(id);
      if (textViewTrailerTitle == null) {
        break missingId;
      }

      id = R.id.view;
      View view = rootView.findViewById(id);
      if (view == null) {
        break missingId;
      }

      id = R.id.youtubePlayer_view;
      View youtubePlayerView = rootView.findViewById(id);
      if (youtubePlayerView == null) {
        break missingId;
      }

      return new FragmentMovieDetailsBinding((MotionLayout) rootView, appBar, cardViewTrailer,
          chipGroupGenres, constraintLayoutMovieMetadata, constraintPopularityRating,
          fabPlayTrailer, felImagePoster, imageViewBack, imageViewFavorite, imageViewMoviePoster,
          imageViewRatingStar, imageViewVideoPlaceholder, nestedScrollviewMovieDetails,
          recyclerviewCast, recyclerviewSimilarMovies, textViewCastTitle, textViewMovieDuration,
          textViewMovieName, textViewMoviePopularity, textViewMoviePopularityTitle,
          textViewMovieRating, textViewMovieRelease, textViewOverview, textViewOverviewTitle,
          textViewSimilarMoviesTitle, textViewTrailerTitle, view, youtubePlayerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
